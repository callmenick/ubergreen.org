/**
 * Font families map
 * @type {Map}
 */
$fontFamilies: (
  primary: ("Open Sans", Helvetica, Arial, sans-serif)
);

/**
 * Takes in a single argument and returns the correct font family
 * @param {String} $type The font family type
 * @return {String}
 */
@function fontFamily($type) {
  @if (type-of($type) != "string") {
    @warn "You must supply a string to this function.";
  }

  @if (map-has-key($fontFamilies, $type)) {
    @return map-get($fontFamilies, $type);
  } @else {
    @warn "$type doesn't exist in $fontFamilies.";
    @return defaultMapValue($fontFamilies);
  }
}

/**
 * Font sizes map
 * @type {Map}
 */
$fontSizes: (
  12: 1.2rem,
  14: 1.4rem,
  16: 1.6rem,
  18: 1.8rem,
  20: 2rem,
  24: 2.4rem,
  28: 2.8rem,
);

/**
 * Takes in a size argument and returns the corresponding font size
 * @param {Number} $size
 * @return {String}
 */
@function fontSize($size) {
  @if (type-of($size) != "number") {
    @warn "You must supply a number to this function.";
  }

  @if (map-has-key($fontSizes, $size)) {
    @return map-get($fontSizes, $size);
  } @else {
    @warn "$size doesn't exist in $fontSizes.";
    @return defaultMapValue($fontSizes);
  }
}

/**
 * Heading sizes map
 * @type {Map}
 */
$headingSizes: (
  24: 2.4rem,
  32: 3.2rem,
  42: 4.2rem,
  50: 5.0rem,
  60: 6.0rem,
  72: 7.2rem,
  80: 8.0rem
);

/**
 * Takes in a size argument and returns the corresponding heading size
 * @param {Number} $size
 * @return {String}
 */
@function headingSize($size) {
  @if (type-of($size) != "number") {
    @warn "You must supply a number to this function.";
  }

  @if (map-has-key($headingSizes, $size)) {
    @return map-get($headingSizes, $size);
  } @else {
    @warn "$size doesn't exist in $headingSizes.";
    @return defaultMapValue($headingSizes);
  }
}

/**
 * Line heights map
 * @type {Map}
 */
$lineHeights: (
  1: 1,
  1.1: 1.1,
  1.2: 1.2,
  1.3: 1.3,
  1.5: 1.5
);

/**
 * Takes in a single argument and returns the correct line height
 * @param {String} $type The font family type
 * @return {String}
 */
@function lineHeight($size) {
  @if (type-of($size) != "number") {
    @warn "You must supply a number to this function.";
  }

  @if (map-has-key($lineHeights, $size)) {
    @return map-get($lineHeights, $size);
  } @else {
    @warn "$size doesn't exist in $lineHeights.";
    @return defaultMapValue($lineHeights);
  }
}
